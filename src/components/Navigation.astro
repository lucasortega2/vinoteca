---
const links = [
  { text: 'Inicio', href: '/' },
  { text: 'Combos', href: '/combos' },
  { text: 'Carta de Vinos', href: '/vinos' },
  { text: 'Contacto', href: '/contacto' },
];

const currentPath = Astro.url.pathname;
---

<header class="fixed w-full backdrop-blur-md z-50 border-b border-gray-100 bg-cream/80 " >
  <nav class="container px-4 py-4 mx-auto">
    <div class="flex justify-between items-center">
      <!-- Logo -->
      <a 
        href="/" 
        class="text-2xl text-rose-600 hover:text-rose-700 transition-all duration-300 hover:scale-[1.02]"
      >
        Vinoteca Nexus
      </a>

      <!-- Desktop Navigation -->
      <div class="hidden md:flex items-center gap-8">
        {
          links.map((link) => (
            <a
              href={link.href}
              class:list={[
                'relative py-2 text-gray-600 hover:text-rose-600',
                'transition-all duration-300 ease-in-out',
                'after:absolute after:left-0 after:bottom-0',
                'after:h-0.5 after:bg-rose-500/80',
                'after:transition-all after:duration-300',
                currentPath === link.href 
                  ? 'text-rose-600 after:w-full' 
                  : 'after:w-0 hover:after:w-full'
              ]}
            >
              {link.text}
            </a>
          ))
        }
      </div>

      <!-- Mobile Menu Button -->
      <button 
        id="menuButton"
        class="md:hidden p-2 text-rose-600 hover:bg-rose-50 rounded-lg transition-all duration-300
               hover:scale-105 active:scale-95"
        aria-label="Toggle menu"
        aria-expanded="false"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 24 24"
          stroke-width="1.5"
          stroke="currentColor"
          class="w-6 h-6"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5"
          />
        </svg>
      </button>
    </div>

    <!-- Mobile Menu -->
    <div 
      id="mobileMenu" 
      class="hidden md:hidden absolute top-full left-0 w-full bg-white/95 backdrop-blur-md
             border-b border-gray-100 shadow-lg transform origin-top
             transition-all duration-300 ease-in-out"
    >
      <div class="container mx-auto px-4 py-4 space-y-3">
        {
          links.map((link) => (
            <a
              href={link.href}
              class:list={[
                'block py-2 px-4 rounded-lg transition-all duration-300',
                'hover:bg-rose-50 hover:scale-[1.01]',
                currentPath === link.href
                  ? 'bg-rose-50 text-rose-600'
                  : 'text-gray-600 hover:text-rose-600'
              ]}
            >
              {link.text}
            </a>
          ))
        }
      </div>
    </div>
  </nav>
</header>

<script>
  const menuButton = document.getElementById('menuButton');
  const mobileMenu = document.getElementById('mobileMenu');
  
  if (menuButton && mobileMenu) {
    menuButton.addEventListener('click', () => {
      const isExpanded = menuButton.getAttribute('aria-expanded') === 'true';
      menuButton.setAttribute('aria-expanded', (!isExpanded).toString());
      
      if (isExpanded) {
        mobileMenu.classList.add('hidden');
        mobileMenu.classList.remove('opacity-100', 'scale-y-100');
        mobileMenu.classList.add('opacity-0', 'scale-y-95');
      } else {
        mobileMenu.classList.remove('hidden');
        setTimeout(() => {
          mobileMenu.classList.remove('opacity-0', 'scale-y-95');
          mobileMenu.classList.add('opacity-100', 'scale-y-100');
        }, 0);
      }
    });
  }
</script>

<style>
  #mobileMenu {
    opacity: 0;
    transform: scaleY(0.95);
    transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out;
  }

  #mobileMenu.opacity-100 {
    opacity: 1;
    transform: scaleY(1);
  }
</style>
